name: qt

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/qt.yml'
      - 'ports/qt/**'
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/qt.yml'
      - 'ports/qt/**'

jobs:
  build:
    runs-on: self-hosted
    strategy:
      matrix:
        qnx_env:
          - ghcr.io/qnx-ports/sdp800-build-env:latest
          - ghcr.io/qnx-ports/sdp-build-env:latest
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.title, 'qt'))
    steps:
    - name: Checkout build-files
      uses: actions/checkout@v4
      with:
        path: build-files

    - name: Checkout qt
      uses: actions/checkout@v4
      with:
        repository: qt/qt5
        path: build-files/ports/qt/nto-aarch64-le/qt5
        ref: 6.8.1
        submodules: recursive

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{github.actor}}
        password: ${{secrets.GITHUB_TOKEN}}

    - name: Pull build environment
      run: |
        docker pull ${{ matrix.qnx_env }}

    - name: Build qt
      uses: addnab/docker-run-action@v3
      with:
        image: ${{ matrix.qnx_env }}
        options: -v ${{ github.workspace }}:/home/runner/workspace -e MAKEFLAGS=${{ env.MAKEFLAGS }}
        shell: bash
        run: |
          cd workspace
          WORKSPACE=$PWD
          if [[ "${{ matrix.qnx_env}}" == "ghcr.io/qnx-ports/sdp800-build-env:latest" ]]; then
            source ~/qnx/800/qnxsdp-env.sh
          else 
            source ~/qnx/710/qnxsdp-env.sh
          fi
          cd build-files/ports/qt/nto-aarch64-le
          cp -r qt5 ../nto-x86_64-o
          cd ../
          mkdir qthostbuild qthost
          cd qthostbuild
          cmake -GNinja \
            -DCMAKE_BUILD_TYPE=Release \
            -DQT_BUILD_EXAMPLES=OFF \
            -DQT_BUILD_TESTS=OFF \
            -DCMAKE_INSTALL_PREFIX=../qthost \
            -DQT_FEATURE_opengles2=ON \
            -DBUILD_qtopcua=OFF \
            -Wno-dev \
            ../nto-aarch64-le/qt5
          cmake --build . --parallel
          cmake --install .
          cd $WORKSPACE
          BUILD_TESTING=OFF make -C build-files/ports/qt install -j$(nproc)
