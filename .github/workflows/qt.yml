name: qt

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build:
    runs-on: build-files-runner
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.title, 'qt'))
    steps:
    - name: Checkout build-files
      uses: actions/checkout@v4
      with:
        path: build-files

    - name: Checkout qt
      uses: actions/checkout@v4
      with:
        repository: qt/qt5
        path: build-files/ports/qt/nto-aarch64-le/qt5
        ref: 6.8
        submodules: recursive

    - name: Download SDP 8.0
      env:
        LICENSE_KEY: ${{ secrets.LICENSE_KEY }}
        MYQNX_USER: ${{ secrets.MYQNX_USER }}
        MYQNX_PASSWORD: ${{ secrets.MYQNX_PASSWORD }}
      run: |
        echo "Downloading QNX Software Center ..."
        mkdir ${{ github.workspace }}/.qnx
        curl -v --cookie-jar ${{ github.workspace }}/.qnx/myqnxcookies.auth --form "userlogin=$MYQNX_USER" --form "password=$MYQNX_PASSWORD" -X POST https://www.qnx.com/account/login.html > login_response.html
        curl -v -L --cookie ${{ github.workspace }}/.qnx/myqnxcookies.auth https://www.qnx.com/download/download/77351/qnx-setup-2.0.3-202408131717-linux.run > qnx-setup-lin.run
        chmod a+x qnx-setup-lin.run
        ./qnx-setup-lin.run force-override disable-auto-start agree-to-license-terms ${{ github.workspace }}/qnxinstall
        echo "Installing License ..."
        ${{ github.workspace }}/qnxinstall/qnxsoftwarecenter/qnxsoftwarecenter_clt -syncLicenseKeys -myqnx.user="$MYQNX_USER" -myqnx.password="$MYQNX_PASSWORD" -addLicenseKey $LICENSE_KEY
        cp -r ~/.qnx/license ${{ github.workspace }}/.qnx
        echo "Downloading QNX SDP ..."
        ${{ github.workspace }}/qnxinstall/qnxsoftwarecenter/qnxsoftwarecenter_clt -mirror -cleanInstall -destination ${{ github.workspace }}/qnx800 -installBaseline com.qnx.qnx800 -myqnx.user="$MYQNX_USER" -myqnx.password="$MYQNX_PASSWORD"

    - name: Build the Docker image
      run: |
        cd build-files/docker && ./docker-build-qnx-image.sh

    - name: Build qt
      uses: addnab/docker-run-action@v3
      with:
        image: qnx800:latest
        options: -v ${{ github.workspace }}:/home/runner
        shell: bash
        run: |
          WORKSPACE=$PWD
          source ~/qnx800/qnxsdp-env.sh
          cd build-files/ports/qt/nto-aarch64-le
          mkdir qthostbuild qthost
          cd qthostbuild
          cmake -GNinja \
            -DCMAKE_BUILD_TYPE=Release \
            -DQT_BUILD_EXAMPLES=OFF \
            -DQT_BUILD_TESTS=OFF \
            -DCMAKE_INSTALL_PREFIX=../qthost \
            -DQT_FEATURE_opengles2=ON \
            -DBUILD_qtopcua=OFF \
            -Wno-dev \
            ../qt5
          cmake --build . --parallel
          cmake --install .
          cd $WORKSPACE
          BUILD_TESTING=OFF make -C build-files/ports/qt install -j$(nproc)
