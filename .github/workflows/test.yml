name: QEMU spin up and transfer test

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/test.yml"
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/test.yml"

jobs:
  build:
    name: ssh/scp on QEMU spin
    runs-on: self-hosted
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.title, 'test'))
    steps:
      - name: Login to GitHub Container Repository
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Pull build environment
        run: |
          docker pull ghcr.io/qnx-ports/sdp-build-env:latest

      - name: QEMU
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/qnx-ports/sdp-build-env:latest
          options: -v ${{github.workspace}}:/home/runner/workspace -e MAKEFLAGS=${{env.MAKEFLAGS}}
          shell: bash
          run: |
            set -x
            cd ~/workspace
            source ~/qnx/800/qnxsdp-env.sh
            echo "password" | sudo -S apt update
            echo "password" | sudo -S apt install qemu-system-x86 qemu-kvm virt-manager libvirt-clients bridge-utils libvirt-daemon-system sshpass -y
            mkdir -p test_image && cd test_image
            mkqnximage --build
            qemu-system-x86_64 \
            -smp 2 \
            -cpu max \
            -m 1G \
            -drive file=output/disk-qemu.vmdk,if=ide,id=drv0 \
            -netdev user,id=net0,hostfwd=tcp::5500-:22 \
            -device virtio-net-pci,netdev=net0 \
            -kernel output/ifs.bin \
            -object rng-random,filename=/dev/urandom,id=rng0 \
            -device virtio-rng-pci,rng=rng0 \
            -monitor none \
            -display none \
            -pidfile output/qemu.pid \
            -daemonize
            cd ..
            mkdir -p ~/.ssh
            echo -e "Host *\n\tServerAliveInterval 60\n\tServerAliveCountMax 5" > ~/.ssh/config
            echo "test file created on user Linux" > testfile
            sshpass -p qnxuser scp -v -P 5500 -o StrictHostKeyChecking=no testfile qnxuser@localhost:~/
            sshpass -p qnxuser ssh -vvvv -p 5500 -o StrictHostKeyChecking=no qnxuser@localhost "cat testfile"
            echo $?
            sshpass -p qnxuser ssh -vvvv -p 5500 -o StrictHostKeyChecking=no qnxuser@localhost 'echo "this new file is created in QNX QEMU" > touch new_testfile'
            echo $?
            sshpass -p qnxuser ssh -p 5500 -o StrictHostKeyChecking=no qnxuser@localhost "cat newtestfile"
            echo $?
            ls
            exit
