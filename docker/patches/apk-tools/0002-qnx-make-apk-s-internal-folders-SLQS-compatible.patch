From 1ca593f1dc54a3417744883837530e6d1f08f578 Mon Sep 17 00:00:00 2001
From: Leo Shen <i@szclsya.me>
Date: Tue, 8 Apr 2025 12:29:23 -0400
Subject: [PATCH 2/3] qnx: make apk's internal folders SLQS-compatible

---
 src/app_convdb.c |  6 +++---
 src/database.c   | 12 ++++++------
 src/package.c    |  2 +-
 3 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/src/app_convdb.c b/src/app_convdb.c
index 3369ae9..f6598c6 100644
--- a/src/app_convdb.c
+++ b/src/app_convdb.c
@@ -209,12 +209,12 @@ static int conv_main(void *pctx, struct apk_ctx *ac, struct apk_string_array *ar
 	adb_wo_alloca(&ctx->pkgs, &schema_package_adb_array, &ctx->dbi);
 
 	apk_tar_parse(
-		apk_istream_from_file(root_fd, "lib/apk/db/scripts.tar"),
+		apk_istream_from_file(root_fd, "system/var/apk/db/scripts.tar"),
 		read_script, ctx, apk_ctx_get_id_cache(ac));
 
-	read_triggers(ctx, apk_istream_from_file(root_fd, "lib/apk/db/triggers"));
+	read_triggers(ctx, apk_istream_from_file(root_fd, "system/var/apk/db/triggers"));
 
-	convert_idb(ctx, apk_istream_from_file(root_fd, "lib/apk/db/installed"));
+	convert_idb(ctx, apk_istream_from_file(root_fd, "system/var/apk/db/installed"));
 
 	adb_wo_obj(&idb, ADBI_IDB_PACKAGES, &ctx->pkgs);
 	adb_w_rootobj(&idb);
diff --git a/src/database.c b/src/database.c
index 45a73b8..8afc71b 100644
--- a/src/database.c
+++ b/src/database.c
@@ -43,10 +43,10 @@
 #include "apk_adb.h"
 #include "apk_fs.h"
 
-static const char * const apk_static_cache_dir = "var/cache/apk";
+static const char * const apk_static_cache_dir = "data/tmp/apk";
 static const char * const apk_world_file = "etc/apk/world";
 static const char * const apk_arch_file = "etc/apk/arch";
-static const char * const apk_lock_file = "lib/apk/db/lock";
+static const char * const apk_lock_file = "system/var/apk/db/lock";
 
 static struct apk_db_acl *apk_default_acl_dir, *apk_default_acl_file;
 
@@ -1831,8 +1831,8 @@ static int setup_cache(struct apk_database *db)
 const char *apk_db_layer_name(int layer)
 {
 	switch (layer) {
-	case APK_DB_LAYER_ROOT: return "lib/apk/db";
-	case APK_DB_LAYER_UVOL: return "lib/apk/db-uvol";
+	case APK_DB_LAYER_ROOT: return "system/var/apk/db";
+	case APK_DB_LAYER_UVOL: return "system/var/apk/db-uvol";
 	default:
 		assert(!"invalid layer");
 		return 0;
@@ -2177,7 +2177,7 @@ int apk_db_write_config(struct apk_database *db)
 		return 0;
 
 	if (db->ctx->open_flags & APK_OPENF_CREATE) {
-		apk_make_dirs(db->root_fd, "lib/apk/db", 0755, 0755);
+		apk_make_dirs(db->root_fd, "system/var/apk/db", 0755, 0755);
 		apk_make_dirs(db->root_fd, "etc/apk", 0755, 0755);
 	} else if (db->lock_fd == 0) {
 		apk_err(out, "Refusing to write db without write lock!");
@@ -2326,7 +2326,7 @@ int apk_db_run_script(struct apk_database *db, int fd, char **argv)
 {
 	struct apk_out *out = &db->ctx->out;
 	static char * const clean_environment[] = {
-		"PATH=/usr/sbin:/usr/bin:/sbin:/bin",
+		"PATH=/system/sbin:/system/bin:/bin:/proc/boot",
 		NULL
 	};
 	const char *argv0 = apk_last_path_segment(argv[0]);
diff --git a/src/package.c b/src/package.c
index 503d2e6..175d532 100644
--- a/src/package.c
+++ b/src/package.c
@@ -750,7 +750,7 @@ int apk_ipkg_run_script(struct apk_installed_package *ipkg,
 {
 	// When memfd_create is not available store the script in /lib/apk/exec
 	// and hope it allows executing.
-	static const char script_exec_dir[] = "lib/apk/exec";
+	static const char script_exec_dir[] = "system/var/apk/exec";
 	struct apk_out *out = &db->ctx->out;
 	struct apk_package *pkg = ipkg->pkg;
 	const char *reason = "failed to execute: ";
-- 
2.34.1

