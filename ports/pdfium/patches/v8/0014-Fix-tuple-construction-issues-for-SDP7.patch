From 510b8d5b8d390334fc39e05a7407ae48ea2ba301 Mon Sep 17 00:00:00 2001
From: Yongxin Dai <yodai@qnx.com>
Date: Tue, 8 Jul 2025 20:32:22 -0400
Subject: [PATCH] Fix tuple construction issues for SDP7

---
 src/base/template-utils.h            |   4 +
 src/compiler/turboshaft/operations.h | 116 +++++++++++++++++++++++++++
 src/maglev/maglev-graph-builder.h    |   5 ++
 src/maglev/maglev-ir.h               |   4 +
 4 files changed, 129 insertions(+)

diff --git a/src/base/template-utils.h b/src/base/template-utils.h
index 29db903f1b7..2e4fc5a47e0 100644
--- a/src/base/template-utils.h
+++ b/src/base/template-utils.h
@@ -79,7 +79,11 @@ constexpr bool NIsNotGreaterThanTupleSize =
 
 template <size_t N, typename T, size_t... Ints>
 constexpr auto tuple_slice_impl(const T& tpl, std::index_sequence<Ints...>) {
+#if !defined(__QNX__) || __QNX__ >= 800
   return std::tuple{std::get<N + Ints>(tpl)...};
+#else
+  return std::make_tuple(std::get<N + Ints>(tpl)...);
+#endif
 }
 
 template <typename Tuple, typename Function, size_t... Index>
diff --git a/src/compiler/turboshaft/operations.h b/src/compiler/turboshaft/operations.h
index 9bab0e08aa4..7a9cdb60193 100644
--- a/src/compiler/turboshaft/operations.h
+++ b/src/compiler/turboshaft/operations.h
@@ -1394,7 +1394,11 @@ struct DeadOp : FixedArityOperationT<0, DeadOp> {
   }
 
   void Validate(const Graph& graph) const {}
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct AbortCSADcheckOp : FixedArityOperationT<1, AbortCSADcheckOp> {
@@ -1413,7 +1417,11 @@ struct AbortCSADcheckOp : FixedArityOperationT<1, AbortCSADcheckOp> {
   explicit AbortCSADcheckOp(V<String> message) : Base(message) {}
 
   void Validate(const Graph& graph) const {}
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct GenericBinopOp : FixedArityOperationT<4, GenericBinopOp> {
@@ -2376,7 +2384,11 @@ struct BitcastWord32PairToFloat64Op
 
   void Validate(const Graph& graph) const {
   }
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct TaggedBitcastOp : FixedArityOperationT<1, TaggedBitcastOp> {
@@ -3560,7 +3572,11 @@ struct RetainOp : FixedArityOperationT<1, RetainOp> {
 
   void Validate(const Graph& graph) const {
   }
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 // We compare the stack pointer register with the given limit and a
@@ -4116,7 +4132,11 @@ struct CatchBlockBeginOp : FixedArityOperationT<0, CatchBlockBeginOp> {
 
   CatchBlockBeginOp() : Base() {}
   void Validate(const Graph& graph) const {}
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 // Throwing operations always appear together with `DidntThrowOp`, which
@@ -4253,7 +4273,11 @@ struct UnreachableOp : FixedArityOperationT<0, UnreachableOp> {
 
   UnreachableOp() : Base() {}
   void Validate(const Graph& graph) const {}
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct ReturnOp : OperationT<ReturnOp> {
@@ -4294,7 +4318,11 @@ struct ReturnOp : OperationT<ReturnOp> {
                        base::Vector<const OpIndex> return_values) {
     return Base::New(graph, 1 + return_values.size(), pop_count, return_values);
   }
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct GotoOp : FixedArityOperationT<0, GotoOp> {
@@ -4446,7 +4474,11 @@ struct TupleOp : OperationT<TupleOp> {
   }
 
   void Validate(const Graph& graph) const {}
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 // For operations that produce multiple results, we use `ProjectionOp` to
@@ -5092,7 +5124,11 @@ struct NewConsStringOp : FixedArityOperationT<3, NewConsStringOp> {
   void Validate(const Graph& graph) const {
   }
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct NewArrayOp : FixedArityOperationT<1, NewArrayOp> {
@@ -5201,7 +5237,11 @@ struct LoadFieldByIndexOp : FixedArityOperationT<2, LoadFieldByIndexOp> {
   void Validate(const Graph& graph) const {
   }
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct DebugBreakOp : FixedArityOperationT<0, DebugBreakOp> {
@@ -5217,7 +5257,11 @@ struct DebugBreakOp : FixedArityOperationT<0, DebugBreakOp> {
   DebugBreakOp() : Base() {}
   void Validate(const Graph& graph) const {}
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct DebugPrintOp : FixedArityOperationT<1, DebugPrintOp> {
@@ -5480,7 +5524,11 @@ struct StringLengthOp : FixedArityOperationT<1, StringLengthOp> {
   void Validate(const Graph& graph) const {
   }
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct StringIndexOfOp : FixedArityOperationT<3, StringIndexOfOp> {
@@ -5514,7 +5562,11 @@ struct StringIndexOfOp : FixedArityOperationT<3, StringIndexOfOp> {
   void Validate(const Graph& graph) const {
   }
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct StringFromCodePointAtOp
@@ -5544,7 +5596,11 @@ struct StringFromCodePointAtOp
 
   void Validate(const Graph& graph) const {}
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct StringSubstringOp : FixedArityOperationT<3, StringSubstringOp> {
@@ -5575,7 +5631,11 @@ struct StringSubstringOp : FixedArityOperationT<3, StringSubstringOp> {
 
   void Validate(const Graph& graph) const {}
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct StringConcatOp : FixedArityOperationT<2, StringConcatOp> {
@@ -5603,7 +5663,11 @@ struct StringConcatOp : FixedArityOperationT<2, StringConcatOp> {
 
   void Validate(const Graph& graph) const {}
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct StringComparisonOp : FixedArityOperationT<2, StringComparisonOp> {
@@ -5839,7 +5903,11 @@ struct LoadStackArgumentOp : FixedArityOperationT<2, LoadStackArgumentOp> {
   void Validate(const Graph& graph) const {
   }
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct StoreTypedElementOp : FixedArityOperationT<5, StoreTypedElementOp> {
@@ -6140,7 +6208,11 @@ struct CheckEqualsInternalizedStringOp
     DCHECK(Get(graph, frame_state()).Is<FrameStateOp>());
   }
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct LoadMessageOp : FixedArityOperationT<1, LoadMessageOp> {
@@ -6164,7 +6236,11 @@ struct LoadMessageOp : FixedArityOperationT<1, LoadMessageOp> {
   void Validate(const Graph& graph) const {
   }
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct StoreMessageOp : FixedArityOperationT<2, StoreMessageOp> {
@@ -6189,7 +6265,11 @@ struct StoreMessageOp : FixedArityOperationT<2, StoreMessageOp> {
   void Validate(const Graph& graph) const {
   }
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct SameValueOp : FixedArityOperationT<2, SameValueOp> {
@@ -6246,7 +6326,11 @@ struct Float64SameValueOp : FixedArityOperationT<2, Float64SameValueOp> {
 
   void Validate(const Graph& graph) const {}
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct FastApiCallParameters : public NON_EXPORTED_BASE(ZoneObject) {
@@ -6436,7 +6520,11 @@ struct EnsureWritableFastElementsOp
 
   void Validate(const Graph& graph) const {}
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct MaybeGrowFastElementsOp
@@ -7236,7 +7324,11 @@ struct StringAsWtf16Op : FixedArityOperationT<1, StringAsWtf16Op> {
   }
 
   void Validate(const Graph& graph) const {}
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 // Takes a flattened string and extracts the first string pointer, the base
@@ -7264,7 +7356,11 @@ struct StringPrepareForGetCodeUnitOp
   }
 
   void Validate(const Graph& graph) const {}
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct Simd128ConstantOp : FixedArityOperationT<0, Simd128ConstantOp> {
@@ -8715,7 +8811,11 @@ struct SimdPack128To256Op : FixedArityOperationT<2, SimdPack128To256Op> {
   V<Simd128> left() const { return Base::input<Simd128>(0); }
   V<Simd128> right() const { return Base::input<Simd128>(1); }
   void Validate(const Graph& graph) const {}
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 #ifdef V8_TARGET_ARCH_X64
@@ -8822,7 +8922,11 @@ struct LoadStackPointerOp : FixedArityOperationT<0, LoadStackPointerOp> {
   }
 
   void Validate(const Graph& graph) const {}
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct SetStackPointerOp : FixedArityOperationT<1, SetStackPointerOp> {
@@ -8841,7 +8945,11 @@ struct SetStackPointerOp : FixedArityOperationT<1, SetStackPointerOp> {
   }
 
   void Validate(const Graph& graph) const {}
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 #endif  // V8_ENABLE_WEBASSEMBLY
@@ -8864,7 +8972,11 @@ struct GetContinuationPreservedEmbedderDataOp
 
   void Validate(const Graph& graph) const {}
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 
 struct SetContinuationPreservedEmbedderDataOp
@@ -8883,7 +8995,11 @@ struct SetContinuationPreservedEmbedderDataOp
 
   void Validate(const Graph& graph) const {}
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
 };
 #endif  // V8_ENABLE_CONTINUATION_PRESERVED_EMBEDDER_DATA
 
diff --git a/src/maglev/maglev-graph-builder.h b/src/maglev/maglev-graph-builder.h
index 84a272c8f85..bc824f915f9 100644
--- a/src/maglev/maglev-graph-builder.h
+++ b/src/maglev/maglev-graph-builder.h
@@ -966,8 +966,13 @@ class MaglevGraphBuilder {
           !Node::needs_epoch_check(op) ||
           known_node_aspects().effect_epoch() <= exists->second.effect_epoch;
       if (sanity_check && epoch_check) {
+#if !defined(__QNX__) || __QNX__ >= 800
         if (static_cast<NodeT*>(candidate)->options() ==
             std::tuple{std::forward<Args>(args)...}) {
+#else
+        if (static_cast<NodeT*>(candidate)->options() ==
+            std::make_tuple(std::forward<Args>(args)...)) {
+#endif
           int i = 0;
           for (const auto& inp : inputs) {
             if (inp != candidate->input(i).node()) {
diff --git a/src/maglev/maglev-ir.h b/src/maglev/maglev-ir.h
index 1fd949df4c0..c93d4f21853 100644
--- a/src/maglev/maglev-ir.h
+++ b/src/maglev/maglev-ir.h
@@ -1927,8 +1927,12 @@ class NodeBase : public ZoneObject {
     set_properties(new_properties);
   }
 
+#if !defined(__QNX__) || __QNX__ >= 800
   auto options() const { return std::tuple{}; }
 
+#else
+  auto options() const { return std::make_tuple(); }
+#endif
   void ClearUnstableNodeAspects(KnownNodeAspects&);
   void ClearElementsProperties(KnownNodeAspects&);
 
-- 
2.34.1

