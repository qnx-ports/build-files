From 9c326be15f4e3de27e6d3ca38b4ec70b6f462226 Mon Sep 17 00:00:00 2001
From: Yongxin Dai <yodai@qnx.com>
Date: Thu, 22 May 2025 10:19:22 -0400
Subject: [PATCH] Support QNX platform

---
 googlemock/include/gmock/gmock-actions.h | 8 ++++++++
 googletest/src/gtest-death-test.cc       | 4 ++++
 2 files changed, 12 insertions(+)

diff --git a/googlemock/include/gmock/gmock-actions.h b/googlemock/include/gmock/gmock-actions.h
index aa470799..452deb95 100644
--- a/googlemock/include/gmock/gmock-actions.h
+++ b/googlemock/include/gmock/gmock-actions.h
@@ -456,6 +456,10 @@ class OnceAction<Result(Args...)> final {
                     // traits above.
                     internal::negation<std::is_same<
                         OnceAction, typename std::decay<Callable>::type>>,
+#if defined(__QNX__) && ___QNX__ < 800
+                    internal::negation<std::is_same<
+                        typename std::tuple<OnceAction&&>, typename std::decay<Callable>::type>>,
+#endif
                     IsDirectlyCompatible<Callable>>  //
                 ::value,
                 int>::type = 0>
@@ -473,6 +477,10 @@ class OnceAction<Result(Args...)> final {
                     // traits above.
                     internal::negation<std::is_same<
                         OnceAction, typename std::decay<Callable>::type>>,
+#if defined(__QNX__) && ___QNX__ < 800
+                    internal::negation<std::is_same<
+                        typename std::tuple<OnceAction&&>, typename std::decay<Callable>::type>>,
+#endif
                     // Exclude callables for which the overload above works.
                     // We'd rather provide the arguments if possible.
                     internal::negation<IsDirectlyCompatible<Callable>>,
diff --git a/googletest/src/gtest-death-test.cc b/googletest/src/gtest-death-test.cc
index 15472f1a..b74ae17e 100644
--- a/googletest/src/gtest-death-test.cc
+++ b/googletest/src/gtest-death-test.cc
@@ -1260,7 +1260,11 @@ static pid_t ExecDeathTestSpawnChild(char* const* argv, int close_fd) {
 #ifdef GTEST_OS_QNX
   // Obtains the current directory and sets it to be closed in the child
   // process.
+#if __QNX__ >= 800
+  const int cwd_fd = open(".", O_RDONLY | O_DIRECTORY);
+#else
   const int cwd_fd = open(".", O_RDONLY);
+#endif // __QNX__ >= 800
   GTEST_DEATH_TEST_CHECK_(cwd_fd != -1);
   GTEST_DEATH_TEST_CHECK_SYSCALL_(fcntl(cwd_fd, F_SETFD, FD_CLOEXEC));
   // We need to execute the test program in the same environment where
-- 
2.34.1

