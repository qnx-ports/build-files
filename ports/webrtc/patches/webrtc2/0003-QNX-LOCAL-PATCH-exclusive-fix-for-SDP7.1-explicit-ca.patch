From 40ad04e42d25cc5fdce9aa6f9e39f6f46510203a Mon Sep 17 00:00:00 2001
From: Yongxin Dai <yodai@blackberry.com>
Date: Tue, 18 Feb 2025 13:53:33 -0500
Subject: [QNX LOCAL PATCH] exclusive fix for SDP7.1: explicit call to a
 Constructor

Compiled with SDP7 and SDP8 without tests
---
 call/flexfec_receive_stream_impl.cc      | 9 +++++++++
 modules/audio_coding/neteq/neteq_impl.cc | 8 ++++++++
 2 files changed, 17 insertions(+)

diff --git a/call/flexfec_receive_stream_impl.cc b/call/flexfec_receive_stream_impl.cc
index bb4122a83f..013dd1e3ea 100644
--- a/call/flexfec_receive_stream_impl.cc
+++ b/call/flexfec_receive_stream_impl.cc
@@ -114,12 +114,21 @@ FlexfecReceiveStreamImpl::FlexfecReceiveStreamImpl(
                                            recovered_packet_receiver)),
       rtp_receive_statistics_(ReceiveStatistics::Create(&env.clock())),
       rtp_rtcp_(env,
+#if defined(WEBRTC_QNX) && __QNX__ < 800
+                RtpRtcpInterface::Configuration {.audio = false,
+                  .receiver_only = true,
+                  .receive_statistics = rtp_receive_statistics_.get(),
+                  .outgoing_transport = config.rtcp_send_transport,
+                  .rtt_stats = rtt_stats,
+                  .local_media_ssrc = config.rtp.local_ssrc}) {
+#else
                 {.audio = false,
                  .receiver_only = true,
                  .receive_statistics = rtp_receive_statistics_.get(),
                  .outgoing_transport = config.rtcp_send_transport,
                  .rtt_stats = rtt_stats,
                  .local_media_ssrc = config.rtp.local_ssrc}) {
+#endif
   RTC_LOG(LS_INFO) << "FlexfecReceiveStreamImpl: " << config.ToString();
   RTC_DCHECK_GE(payload_type_, -1);
 
diff --git a/modules/audio_coding/neteq/neteq_impl.cc b/modules/audio_coding/neteq/neteq_impl.cc
index fec8cfb23a..9c63bbb542 100644
--- a/modules/audio_coding/neteq/neteq_impl.cc
+++ b/modules/audio_coding/neteq/neteq_impl.cc
@@ -108,11 +108,19 @@ NetEqImpl::Dependencies::Dependencies(
                                      stats.get())),
       neteq_controller(controller_factory.Create(
           env,
+#if defined(WEBRTC_QNX) && __QNX__ < 800
+          NetEqController::Config {.allow_time_stretching = !config.for_test_no_time_stretching,
+           .max_packets_in_buffer =
+               static_cast<int>(config.max_packets_in_buffer),
+           .base_min_delay_ms = config.min_delay_ms,
+           .tick_timer = tick_timer.get()})),
+#else
           {.allow_time_stretching = !config.for_test_no_time_stretching,
            .max_packets_in_buffer =
                static_cast<int>(config.max_packets_in_buffer),
            .base_min_delay_ms = config.min_delay_ms,
            .tick_timer = tick_timer.get()})),
+#endif
       red_payload_splitter(new RedPayloadSplitter),
       timestamp_scaler(new TimestampScaler(*decoder_database)),
       accelerate_factory(new AccelerateFactory),
-- 
2.34.1

