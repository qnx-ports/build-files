diff --git a/CMakeLists.txt b/CMakeLists.txt
index e4e8c41aa..c8c146939 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -18,6 +18,8 @@
 cmake_minimum_required(VERSION 3.13)
 cmake_policy(VERSION 3.13...3.16)
 
+set(CMAKE_CXX_STANDARD 14)
+
 # Set CMAKE_BUILD_TYPE to Release by default.
 if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
     message(STATUS "Setting build type to 'Release' as none was specified.")
@@ -97,7 +99,18 @@ endif()
 ###############################################################################
 include(${PROJECT_SOURCE_DIR}/cmake/common/check_configuration.cmake)
 
-set(FORCE_CXX "11" CACHE STRING "C++ standard fulfillment selection")
+if(QNX)
+    set(FORCE_CXX "14" CACHE STRING "C++ standard fulfillment selection")
+    add_compile_definitions(ASIO_HAS_STD_STRING_VIEW=1)
+    if ($ENV{QNX_SDP_VERSION} STREQUAL "qnx710")
+        link_libraries(socket)
+    else()
+        link_libraries(socket fsnotify)
+    endif()
+else()
+    set(FORCE_CXX "11" CACHE STRING "C++ standard fulfillment selection")
+endif()
+
 check_stdcxx()
 
 check_compile_feature()
diff --git a/cmake/modules/FindThreads.cmake b/cmake/modules/FindThreads.cmake
index 80dfd0c19..8a1f2197b 100644
--- a/cmake/modules/FindThreads.cmake
+++ b/cmake/modules/FindThreads.cmake
@@ -104,7 +104,9 @@ macro(_check_pthreads_flag)
 
     if(THREADS_HAVE_PTHREAD_ARG)
       set(Threads_FOUND TRUE)
-      set(CMAKE_THREAD_LIBS_INIT "-pthread")
+      if(NOT QNX)
+        set(CMAKE_THREAD_LIBS_INIT "-pthread")
+      endif()
     endif()
   endif()
 endmacro()
@@ -207,7 +209,7 @@ FIND_PACKAGE_HANDLE_STANDARD_ARGS(Threads DEFAULT_MSG Threads_FOUND)
 if(THREADS_FOUND AND NOT TARGET Threads::Threads)
   add_library(Threads::Threads INTERFACE IMPORTED)
 
-  if(THREADS_HAVE_PTHREAD_ARG)
+  if(THREADS_HAVE_PTHREAD_ARG AND NOT QNX)
     set_property(TARGET Threads::Threads
                  PROPERTY INTERFACE_COMPILE_OPTIONS "$<$<COMPILE_LANGUAGE:CUDA>:SHELL:-Xcompiler -pthread>"
                                                     "$<$<NOT:$<COMPILE_LANGUAGE:CUDA>>:-pthread>")
diff --git a/test/CMakeLists.txt b/test/CMakeLists.txt
index 531770f2c..18b3b10a0 100644
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -25,6 +25,10 @@ endif()
 file(TO_CMAKE_PATH "${PROJECT_SOURCE_DIR}/valgrind.supp" MEMORYCHECK_SUPPRESSIONS_FILE_TMP)
 set(MEMORYCHECK_SUPPRESSIONS_FILE ${MEMORYCHECK_SUPPRESSIONS_FILE_TMP} CACHE FILEPATH "Valgrind suppresions file")
 
+if(QNX AND $ENV{QNX_SDP_VERSION} STREQUAL "qnx800")
+    set(EPROSIMA_BUILD_TESTS ON)
+endif()
+
 ###############################################################################
 # Testing
 ###############################################################################
@@ -68,3 +72,8 @@ if(SYSTEM_TESTS)
     add_subdirectory(system/tools/fastdds)
     add_subdirectory(system/tools/fds)
 endif()
+
+if(QNX)
+    install(DIRECTORY ${CMAKE_BINARY_DIR}/test/ DESTINATION test/fastrtps)
+    install(DIRECTORY ${CMAKE_SOURCE_DIR}/test/certs DESTINATION test/fastrtps)
+endif()
diff --git a/test/profiling/allocations/CMakeLists.txt b/test/profiling/allocations/CMakeLists.txt
index 51143962f..30046dd1f 100644
--- a/test/profiling/allocations/CMakeLists.txt
+++ b/test/profiling/allocations/CMakeLists.txt
@@ -18,7 +18,11 @@ project(fastrtps_allocation_test)
 
 # Default to C++11
 if(NOT CMAKE_CXX_STANDARD)
-  set(CMAKE_CXX_STANDARD 11)
+  if(QNX)
+    set(CMAKE_CXX_STANDARD 11)
+  else()
+    set(CMAKE_CXX_STANDARD 14)
+  endif()
 endif()
 
 if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
