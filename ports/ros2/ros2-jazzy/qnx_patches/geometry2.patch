diff --git a/tf2_bullet/package.xml b/tf2_bullet/package.xml
index 4c9099a0..d800528b 100644
--- a/tf2_bullet/package.xml
+++ b/tf2_bullet/package.xml
@@ -13,7 +13,7 @@
 
   <buildtool_depend>ament_cmake</buildtool_depend>
 
-  <build_depend>bullet</build_depend>
+  <build_depend>bullet3_vendor</build_depend>
   <build_depend>geometry_msgs</build_depend>
   <build_depend>tf2</build_depend>
   <build_depend>tf2_ros</build_depend>
diff --git a/tf2_eigen/CMakeLists.txt b/tf2_eigen/CMakeLists.txt
index f24d831d..e40d52c3 100644
--- a/tf2_eigen/CMakeLists.txt
+++ b/tf2_eigen/CMakeLists.txt
@@ -15,7 +15,9 @@ find_package(tf2 REQUIRED)
 find_package(tf2_ros REQUIRED)
 
 # Work around broken find module in AlmaLinux/RHEL eigen3-devel from PowerTools repo
-find_package(Eigen3 QUIET NO_MODULE)
+if(NOT QNX)
+  find_package(Eigen3 QUIET NO_MODULE)
+endif()
 if(NOT Eigen3_FOUND)
   find_package(Eigen3 REQUIRED)
 endif()
diff --git a/tf2_eigen_kdl/CMakeLists.txt b/tf2_eigen_kdl/CMakeLists.txt
index 9bdfa1d1..44ef2c27 100644
--- a/tf2_eigen_kdl/CMakeLists.txt
+++ b/tf2_eigen_kdl/CMakeLists.txt
@@ -11,7 +11,9 @@ endif()
 
 find_package(ament_cmake REQUIRED)
 # Work around broken find module in AlmaLinux/RHEL eigen3-devel from PowerTools repo
-find_package(Eigen3 QUIET NO_MODULE)
+if(NOT QNX)
+  find_package(Eigen3 QUIET NO_MODULE)
+endif()
 if(NOT Eigen3_FOUND)
   find_package(Eigen3 REQUIRED)
 endif()
diff --git a/tf2_geometry_msgs/CMakeLists.txt b/tf2_geometry_msgs/CMakeLists.txt
index f8ca2367..c8ad6b49 100644
--- a/tf2_geometry_msgs/CMakeLists.txt
+++ b/tf2_geometry_msgs/CMakeLists.txt
@@ -16,7 +16,17 @@ if(WIN32 AND CMAKE_BUILD_TYPE STREQUAL "Debug")
   # Force FindPython3 to use the debug interpretter where ROS 2 expects it
   set(Python3_EXECUTABLE "${PYTHON_EXECUTABLE_DEBUG}")
 endif()
-find_package(Python3 REQUIRED COMPONENTS Interpreter Development)
+
+if(QNX)
+  find_library(python3_LIBRARY NAMES python3)
+
+  include_directories(${PROJECT_NAME}
+    ${QNX_TARGET}/usr/include/python${PYTHON_VERSION_QNX}
+    ${QNX_TARGET}/usr/include/${CPUVARDIR}/python${PYTHON_VERSION_QNX}
+    ${QNX_TARGET}/${CPUVARDIR}/usr/lib/python${PYTHON_VERSION_QNX}/site-packages/numpy/core/include)
+else()
+  find_package(Python3 REQUIRED COMPONENTS Interpreter Development)
+endif()
 
 find_package(geometry_msgs REQUIRED)
 find_package(orocos_kdl_vendor REQUIRED)
diff --git a/tf2_py/CMakeLists.txt b/tf2_py/CMakeLists.txt
index c0e7b9a8..1ac1a9ae 100644
--- a/tf2_py/CMakeLists.txt
+++ b/tf2_py/CMakeLists.txt
@@ -27,7 +27,17 @@ if(WIN32 AND CMAKE_BUILD_TYPE STREQUAL "Debug")
   # Force FindPython3 to use the debug interpretter where ROS 2 expects it
   set(Python3_EXECUTABLE "${PYTHON_EXECUTABLE_DEBUG}")
 endif()
-find_package(Python3 REQUIRED COMPONENTS Interpreter Development)
+
+if(QNX)
+  find_library(python3_LIBRARY NAMES python3)
+
+  include_directories(${PROJECT_NAME}
+    ${QNX_TARGET}/usr/include/python${PYTHON_VERSION_QNX}
+    ${QNX_TARGET}/usr/include/${CPUVARDIR}/python${PYTHON_VERSION_QNX}
+    ${QNX_TARGET}/${CPUVARDIR}/usr/lib/python${PYTHON_VERSION_QNX}/site-packages/numpy/core/include)
+else()
+  find_package(Python3 REQUIRED COMPONENTS Interpreter Development)
+endif()
 
 find_package(ament_cmake REQUIRED)
 find_package(ament_cmake_python REQUIRED)
@@ -36,30 +46,55 @@ find_package(tf2 REQUIRED)
 
 ament_python_install_package(${PROJECT_NAME})
 
-python3_add_library(_tf2_py src/tf2_py.cpp)
-
-if(WIN32 AND CMAKE_BUILD_TYPE STREQUAL "Debug")
-  # python3_add_library should really take care of this for us, but it doesn't
-  set_property(TARGET _tf2_py PROPERTY SUFFIX "_d.pyd")
+if(QNX)
+  add_library(${PROJECT_NAME} src/tf2_py.cpp)
+else()
+  python3_add_library(_tf2_py src/tf2_py.cpp)
 endif()
 
-# Set output directories to import module from the build directory
-# Use a no-op generator expression so multi-config generators don't append an
-# extra directory like Release/ or Debug/ and break the Python import.
-set_target_properties(_tf2_py PROPERTIES
-  LIBRARY_OUTPUT_DIRECTORY "$<1:${CMAKE_CURRENT_BINARY_DIR}/test_${PROJECT_NAME}>"
-  RUNTIME_OUTPUT_DIRECTORY "$<1:${CMAKE_CURRENT_BINARY_DIR}/test_${PROJECT_NAME}>"
-)
-
-target_link_libraries(_tf2_py PRIVATE
-  ${geometry_msgs_TARGETS}
-  tf2::tf2
-)
-
-install(TARGETS
-  _tf2_py
-  DESTINATION ${PYTHON_INSTALL_DIR}/${PROJECT_NAME}
-)
+if(QNX)
+  # Set output directories to import module from the build directory
+  # Use a no-op generator expression so multi-config generators don't append an
+  # extra directory like Release/ or Debug/ and break the Python import.
+  set_target_properties(${PROJECT_NAME} PROPERTIES
+    LIBRARY_OUTPUT_DIRECTORY "$<1:${CMAKE_CURRENT_BINARY_DIR}/test_${PROJECT_NAME}>"
+    RUNTIME_OUTPUT_DIRECTORY "$<1:${CMAKE_CURRENT_BINARY_DIR}/test_${PROJECT_NAME}>"
+  )
+
+  target_link_libraries(${PROJECT_NAME} PRIVATE
+    ${geometry_msgs_TARGETS}
+    tf2::tf2
+  )
+
+  install(TARGETS
+    ${PROJECT_NAME}
+    DESTINATION ${PYTHON_INSTALL_DIR}/${PROJECT_NAME}
+  )
+
+else()
+  if(WIN32 AND CMAKE_BUILD_TYPE STREQUAL "Debug")
+    # python3_add_library should really take care of this for us, but it doesn't
+    set_property(TARGET _tf2_py PROPERTY SUFFIX "_d.pyd")
+  endif()
+
+  # Set output directories to import module from the build directory
+  # Use a no-op generator expression so multi-config generators don't append an
+  # extra directory like Release/ or Debug/ and break the Python import.
+  set_target_properties(_tf2_py PROPERTIES
+    LIBRARY_OUTPUT_DIRECTORY "$<1:${CMAKE_CURRENT_BINARY_DIR}/test_${PROJECT_NAME}>"
+    RUNTIME_OUTPUT_DIRECTORY "$<1:${CMAKE_CURRENT_BINARY_DIR}/test_${PROJECT_NAME}>"
+  )
+
+  target_link_libraries(_tf2_py PRIVATE
+    ${geometry_msgs_TARGETS}
+    tf2::tf2
+  )
+
+  install(TARGETS
+  _ tf2_py
+    DESTINATION ${PYTHON_INSTALL_DIR}/${PROJECT_NAME}
+  )
+endif()
 
 if(BUILD_TESTING)
   find_package(ament_lint_auto REQUIRED)
