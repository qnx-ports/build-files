diff --git a/netifaces.c b/netifaces.c
index fa18add..287d19c 100644
--- a/netifaces.c
+++ b/netifaces.c
@@ -1,5 +1,9 @@
 #include <Python.h>
 
+#ifdef __QNXNTO__
+  #include <net/if_dl.h>
+#endif
+
 /* Before Python 2.6, PyUnicode_FromString doesn't exist */
 #if PY_MAJOR_VERSION < 2 || (PY_MAJOR_VERSION == 2 && PY_MINOR_VERSION < 6)
 PyObject *PyUnicode_FromString(const char *s)
diff --git a/setup.py b/setup.py
index 54b809e..4ad0ff3 100644
--- a/setup.py
+++ b/setup.py
@@ -7,6 +7,11 @@ from setuptools.command.build_ext import build_ext
 from distutils.errors import *
 import pickle
 
+qnx = False
+if "--qnx" in sys.argv:
+    qnx = True
+    sys.argv.remove("--qnx")
+
 if sys.version_info[0] == 2:
     def output(*args, **kwargs):
         end = kwargs.get('end', '\n')
@@ -550,6 +555,16 @@ class my_build_ext(build_ext):
 
         results['have_pf_netlink'] = result
 
+        if qnx:
+            self.compiler.define_macro('_QNX_SOURCE',1)
+            self.compiler.define_macro('HAVE_GETIFADDRS',1)
+            self.compiler.define_macro('HAVE_SOCKET_IOCTLS',1)
+            self.compiler.define_macro('HAVE_PF_ROUTE',1)
+            self.compiler.define_macro('HAVE_GETNAMEINFO',1)
+            self.compiler.define_macro('HAVE_SOCKETADDR_SA_LEN',1)
+            self.compiler.define_macro('DHAVE_IPV6_SOCKET_IOCTLS',1)
+
+
         if results['have_pf_netlink']:
             output('will use netlink to read routing table')
         elif results['have_sysctl_ctl_net']:
