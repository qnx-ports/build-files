./.libs/lt-test_byte_alpha
=> Preparing alpha map...
=> Preparing trie...
=> Storing key to test trie...
=> Retrieving data from test trie...
=> Freeing test trie...

./.libs/lt-test_byte_list
=> Preparing alpha map...
=> Preparing trie...
=> Storing entries to test trie...
=> Iterating trie...
=> Freeing test trie...

./.libs/lt-test_file
=> Preparing trie...
=> Saving trie to file...
=> Reloading trie from the saved file...
=> Checking trie contents...

./.libs/lt-test_iterator
=> Preparing trie...
=> Adding data to trie...
=> Iterating and checking trie contents...

./.libs/lt-test_nonalpha
=> Preparing trie...
=> Adding data to trie...

./.libs/lt-test_null_trie
=> Preparing empty trie...
=> Iterating...

./.libs/lt-test_serialization
=> Preparing trie...
=> Saving trie to file...
=> Getting serialized trie size...
serialized trie size 1376
=> Allocating...
allocated 1582cbfb30
=> Serializing...
=> Serialized...
PASS!

./.libs/lt-test_store-retrieve
=> Preparing trie...
=> Adding data to trie...
=> Retrieving data from trie...
=> Deleting some entries from trie...
Deleting 'ammonia'
Deleting 'bat'
Deleting 'bet'
Deleting 'king'
Deleting 'net'
Deleting 'quartz'
Deleting 'who'
Deleting 'quiz'
Deleting 'abacus'
Deleting 'test'
Deleting 'quality'
Deleting 'best'
Deleting 'accredit'
Deleting 'zebra'
=> Retrieving data from trie again after deletions...
=> Iterating trie contents after deletions...

./.libs/lt-test_term_state
=> Preparing trie...
=> Populating trie with test set...
=> Preparing root state...
=> Try walking from root with 'a'...
=> Try walking further with 'b'...
=> Try walking further with 'c'...

./.libs/lt-test_walk
=> Preparing trie...
Now the trie structure is supposed to be:

          +---o-> (3) -o-> (4) -l-> [5]
          |
          |        +---i-> (7) -z-> (8) -e-> [9]
          |        |
(1) -p-> (2) -r-> (6) -e-> (10) -v-> (11) -i-> (12) -e-> (13) -w-> [14]
                   |         |
                   |         +---p-> (15) -a-> (16) -r-> (17) -e-> [18]
                   |
                   +---o-> (19) -d-> (20) -u-> (21) -c-> (22) -e-> [23]
                             |
                             +---g-> (24) -r-> (25) -e-> (26) -s-> (27) -s-> [28]

=> Test walking...
=> Test walking with 'p'...
=> Now at (2), walkable chars should be {'o', 'r'}...
=> Try walking from (2) with 'o' to (3)...
=> Try walking from (3) with 'o' to (4)...
=> Try walking from (4) with 'l' to (5)...
=> Try getting data from (5)...
=> Try walking from (2) with 'r' to (6)...
=> Now at (6), walkable chars should be {'e', 'i', 'o'}...
=> Try walking from (6) with 'i' to (7)...
=> Try walking from (7) with 'z' to (8)...
=> Try walking from (8) with 'e' to (9)...
=> Try getting data from (9)...
=> Try walking from (6) with 'e' to (10)...
=> Now at (10), walkable chars should be {'p', 'v'}...
=> Try walking from (10) with 'v' to (11)...
=> Try walking from (11) with 'i' to (12)...
=> Try walking from (12) with 'e' to (13)...
=> Try walking from (13) with 'w' to (14)...
=> Try getting data from (14)...
=> Try walking from (10) with 'p' to (15)...
=> Try walking from (15) with 'a' to (16)...
=> Try walking from (16) with 'r' to (17)...
=> Try walking from (17) with 'e' to (18)...
=> Try getting data from (18)...
=> Try walking from (6) with 'o' to (19)...
=> Now at (19), walkable chars should be {'d', 'g'}...
=> Try walking from (19) with 'd' to (20)...
=> Try walking from (20) with 'u' to (21)...
=> Try walking from (21) with 'c' to (22)...
=> Try walking from (22) with 'e' to (23)...
=> Try getting data from (23)...
=> Try walking from (19) with 'g' to (24)...
=> Try walking from (24) with 'r' to (25)...
=> Try walking from (25) with 'e' to (26)...
=> Try walking from (26) with 's' to (27)...
=> Try walking from (27) with 's' to (28)...
=> Try getting data from (28)...

./.libs/test_byte_alpha
=> Preparing alpha map...
=> Preparing trie...
=> Storing key to test trie...
=> Retrieving data from test trie...
=> Freeing test trie...

./.libs/test_byte_list
=> Preparing alpha map...
=> Preparing trie...
=> Storing entries to test trie...
=> Iterating trie...
=> Freeing test trie...

./.libs/test_file
=> Preparing trie...
=> Saving trie to file...
=> Reloading trie from the saved file...
=> Checking trie contents...

./.libs/test_iterator
=> Preparing trie...
=> Adding data to trie...
=> Iterating and checking trie contents...

./.libs/test_nonalpha
=> Preparing trie...
=> Adding data to trie...

./.libs/test_null_trie
=> Preparing empty trie...
=> Iterating...

./.libs/test_serialization
=> Preparing trie...
=> Saving trie to file...
=> Getting serialized trie size...
serialized trie size 1376
=> Allocating...
allocated 1e6ebc4b30
=> Serializing...
=> Serialized...
PASS!

./.libs/test_store-retrieve
=> Preparing trie...
=> Adding data to trie...
=> Retrieving data from trie...
=> Deleting some entries from trie...
Deleting 'quick'
Deleting 'name'
Deleting 'net'
Deleting 'kite'
Deleting 'tape'
Deleting 'algorithm'
Deleting 'nut'
Deleting 'why'
Deleting 'hut'
Deleting 'angel'
Deleting 'which'
Deleting 'best'
Deleting 'accredit'
Deleting 'abacus'
=> Retrieving data from trie again after deletions...
=> Iterating trie contents after deletions...

./.libs/test_term_state
=> Preparing trie...
=> Populating trie with test set...
=> Preparing root state...
=> Try walking from root with 'a'...
=> Try walking further with 'b'...
=> Try walking further with 'c'...

./.libs/test_walk
=> Preparing trie...
Now the trie structure is supposed to be:

          +---o-> (3) -o-> (4) -l-> [5]
          |
          |        +---i-> (7) -z-> (8) -e-> [9]
          |        |
(1) -p-> (2) -r-> (6) -e-> (10) -v-> (11) -i-> (12) -e-> (13) -w-> [14]
                   |         |
                   |         +---p-> (15) -a-> (16) -r-> (17) -e-> [18]
                   |
                   +---o-> (19) -d-> (20) -u-> (21) -c-> (22) -e-> [23]
                             |
                             +---g-> (24) -r-> (25) -e-> (26) -s-> (27) -s-> [28]

=> Test walking...
=> Test walking with 'p'...
=> Now at (2), walkable chars should be {'o', 'r'}...
=> Try walking from (2) with 'o' to (3)...
=> Try walking from (3) with 'o' to (4)...
=> Try walking from (4) with 'l' to (5)...
=> Try getting data from (5)...
=> Try walking from (2) with 'r' to (6)...
=> Now at (6), walkable chars should be {'e', 'i', 'o'}...
=> Try walking from (6) with 'i' to (7)...
=> Try walking from (7) with 'z' to (8)...
=> Try walking from (8) with 'e' to (9)...
=> Try getting data from (9)...
=> Try walking from (6) with 'e' to (10)...
=> Now at (10), walkable chars should be {'p', 'v'}...
=> Try walking from (10) with 'v' to (11)...
=> Try walking from (11) with 'i' to (12)...
=> Try walking from (12) with 'e' to (13)...
=> Try walking from (13) with 'w' to (14)...
=> Try getting data from (14)...
=> Try walking from (10) with 'p' to (15)...
=> Try walking from (15) with 'a' to (16)...
=> Try walking from (16) with 'r' to (17)...
=> Try walking from (17) with 'e' to (18)...
=> Try getting data from (18)...
=> Try walking from (6) with 'o' to (19)...
=> Now at (19), walkable chars should be {'d', 'g'}...
=> Try walking from (19) with 'd' to (20)...
=> Try walking from (20) with 'u' to (21)...
=> Try walking from (21) with 'c' to (22)...
=> Try walking from (22) with 'e' to (23)...
=> Try getting data from (23)...
=> Try walking from (19) with 'g' to (24)...
=> Try walking from (24) with 'r' to (25)...
=> Try walking from (25) with 'e' to (26)...
=> Try walking from (26) with 's' to (27)...
=> Try walking from (27) with 's' to (28)...
=> Try getting data from (28)...

./lt-test_byte_alpha
=> Preparing alpha map...
=> Preparing trie...
=> Storing key to test trie...
=> Retrieving data from test trie...
=> Freeing test trie...

./lt-test_byte_list
=> Preparing alpha map...
=> Preparing trie...
=> Storing entries to test trie...
=> Iterating trie...
=> Freeing test trie...

./lt-test_file
=> Preparing trie...
=> Saving trie to file...
=> Reloading trie from the saved file...
=> Checking trie contents...

./lt-test_iterator
=> Preparing trie...
=> Adding data to trie...
=> Iterating and checking trie contents...

./lt-test_nonalpha
=> Preparing trie...
=> Adding data to trie...

./lt-test_null_trie
=> Preparing empty trie...
=> Iterating...

./lt-test_serialization
=> Preparing trie...
=> Saving trie to file...
=> Getting serialized trie size...
serialized trie size 1376
=> Allocating...
allocated 2dbb3c3b30
=> Serializing...
=> Serialized...
PASS!

./lt-test_store-retrieve
=> Preparing trie...
=> Adding data to trie...
=> Retrieving data from trie...
=> Deleting some entries from trie...
Deleting 'quick'
Deleting 'name'
Deleting 'net'
Deleting 'kite'
Deleting 'tape'
Deleting 'algorithm'
Deleting 'nut'
Deleting 'why'
Deleting 'hut'
Deleting 'angel'
Deleting 'which'
Deleting 'best'
Deleting 'accredit'
Deleting 'abacus'
=> Retrieving data from trie again after deletions...
=> Iterating trie contents after deletions...

./lt-test_term_state
=> Preparing trie...
=> Populating trie with test set...
=> Preparing root state...
=> Try walking from root with 'a'...
=> Try walking further with 'b'...
=> Try walking further with 'c'...

./lt-test_walk
=> Preparing trie...
Now the trie structure is supposed to be:

          +---o-> (3) -o-> (4) -l-> [5]
          |
          |        +---i-> (7) -z-> (8) -e-> [9]
          |        |
(1) -p-> (2) -r-> (6) -e-> (10) -v-> (11) -i-> (12) -e-> (13) -w-> [14]
                   |         |
                   |         +---p-> (15) -a-> (16) -r-> (17) -e-> [18]
                   |
                   +---o-> (19) -d-> (20) -u-> (21) -c-> (22) -e-> [23]
                             |
                             +---g-> (24) -r-> (25) -e-> (26) -s-> (27) -s-> [28]

=> Test walking...
=> Test walking with 'p'...
=> Now at (2), walkable chars should be {'o', 'r'}...
=> Try walking from (2) with 'o' to (3)...
=> Try walking from (3) with 'o' to (4)...
=> Try walking from (4) with 'l' to (5)...
=> Try getting data from (5)...
=> Try walking from (2) with 'r' to (6)...
=> Now at (6), walkable chars should be {'e', 'i', 'o'}...
=> Try walking from (6) with 'i' to (7)...
=> Try walking from (7) with 'z' to (8)...
=> Try walking from (8) with 'e' to (9)...
=> Try getting data from (9)...
=> Try walking from (6) with 'e' to (10)...
=> Now at (10), walkable chars should be {'p', 'v'}...
=> Try walking from (10) with 'v' to (11)...
=> Try walking from (11) with 'i' to (12)...
=> Try walking from (12) with 'e' to (13)...
=> Try walking from (13) with 'w' to (14)...
=> Try getting data from (14)...
=> Try walking from (10) with 'p' to (15)...
=> Try walking from (15) with 'a' to (16)...
=> Try walking from (16) with 'r' to (17)...
=> Try walking from (17) with 'e' to (18)...
=> Try getting data from (18)...
=> Try walking from (6) with 'o' to (19)...
=> Now at (19), walkable chars should be {'d', 'g'}...
=> Try walking from (19) with 'd' to (20)...
=> Try walking from (20) with 'u' to (21)...
=> Try walking from (21) with 'c' to (22)...
=> Try walking from (22) with 'e' to (23)...
=> Try getting data from (23)...
=> Try walking from (19) with 'g' to (24)...
=> Try walking from (24) with 'r' to (25)...
=> Try walking from (25) with 'e' to (26)...
=> Try walking from (26) with 's' to (27)...
=> Try walking from (27) with 's' to (28)...
=> Try getting data from (28)...

./test_byte_alpha
=> Preparing alpha map...
=> Preparing trie...
=> Storing key to test trie...
=> Retrieving data from test trie...
=> Freeing test trie...

./test_byte_list
=> Preparing alpha map...
=> Preparing trie...
=> Storing entries to test trie...
=> Iterating trie...
=> Freeing test trie...

./test_file
=> Preparing trie...
=> Saving trie to file...
=> Reloading trie from the saved file...
=> Checking trie contents...

./test_iterator
=> Preparing trie...
=> Adding data to trie...
=> Iterating and checking trie contents...

./test_nonalpha
=> Preparing trie...
=> Adding data to trie...

./test_null_trie
=> Preparing empty trie...
=> Iterating...

./test_serialization
=> Preparing trie...
=> Saving trie to file...
=> Getting serialized trie size...
serialized trie size 1376
=> Allocating...
allocated 3f5a946b30
=> Serializing...
=> Serialized...
PASS!

./test_store-retrieve
=> Preparing trie...
=> Adding data to trie...
=> Retrieving data from trie...
=> Deleting some entries from trie...
Deleting 'quick'
Deleting 'name'
Deleting 'net'
Deleting 'kite'
Deleting 'tape'
Deleting 'algorithm'
Deleting 'nut'
Deleting 'why'
Deleting 'hut'
Deleting 'angel'
Deleting 'which'
Deleting 'best'
Deleting 'accredit'
Deleting 'abacus'
=> Retrieving data from trie again after deletions...
=> Iterating trie contents after deletions...

./test_term_state
=> Preparing trie...
=> Populating trie with test set...
=> Preparing root state...
=> Try walking from root with 'a'...
=> Try walking further with 'b'...
=> Try walking further with 'c'...

./test_walk
=> Preparing trie...
Now the trie structure is supposed to be:

          +---o-> (3) -o-> (4) -l-> [5]
          |
          |        +---i-> (7) -z-> (8) -e-> [9]
          |        |
(1) -p-> (2) -r-> (6) -e-> (10) -v-> (11) -i-> (12) -e-> (13) -w-> [14]
                   |         |
                   |         +---p-> (15) -a-> (16) -r-> (17) -e-> [18]
                   |
                   +---o-> (19) -d-> (20) -u-> (21) -c-> (22) -e-> [23]
                             |
                             +---g-> (24) -r-> (25) -e-> (26) -s-> (27) -s-> [28]

=> Test walking...
=> Test walking with 'p'...
=> Now at (2), walkable chars should be {'o', 'r'}...
=> Try walking from (2) with 'o' to (3)...
=> Try walking from (3) with 'o' to (4)...
=> Try walking from (4) with 'l' to (5)...
=> Try getting data from (5)...
=> Try walking from (2) with 'r' to (6)...
=> Now at (6), walkable chars should be {'e', 'i', 'o'}...
=> Try walking from (6) with 'i' to (7)...
=> Try walking from (7) with 'z' to (8)...
=> Try walking from (8) with 'e' to (9)...
=> Try getting data from (9)...
=> Try walking from (6) with 'e' to (10)...
=> Now at (10), walkable chars should be {'p', 'v'}...
=> Try walking from (10) with 'v' to (11)...
=> Try walking from (11) with 'i' to (12)...
=> Try walking from (12) with 'e' to (13)...
=> Try walking from (13) with 'w' to (14)...
=> Try getting data from (14)...
=> Try walking from (10) with 'p' to (15)...
=> Try walking from (15) with 'a' to (16)...
=> Try walking from (16) with 'r' to (17)...
=> Try walking from (17) with 'e' to (18)...
=> Try getting data from (18)...
=> Try walking from (6) with 'o' to (19)...
=> Now at (19), walkable chars should be {'d', 'g'}...
=> Try walking from (19) with 'd' to (20)...
=> Try walking from (20) with 'u' to (21)...
=> Try walking from (21) with 'c' to (22)...
=> Try walking from (22) with 'e' to (23)...
=> Try getting data from (23)...
=> Try walking from (19) with 'g' to (24)...
=> Try walking from (24) with 'r' to (25)...
=> Try walking from (25) with 'e' to (26)...
=> Try walking from (26) with 's' to (27)...
=> Try walking from (27) with 's' to (28)...
=> Try getting data from (28)...

