diff --git a/CMakeLists.txt b/CMakeLists.txt
index c05ba49..a18db5d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -3,8 +3,48 @@ cmake_minimum_required(VERSION 3.5)
 project(tinyxml2_vendor)
 
 find_package(ament_cmake REQUIRED)
+
+set(PACKAGE_VERSION "1.0.0")
+
+macro(build_tinyxml2)
+
+  set(extra_cmake_args)
+
+  if(DEFINED CMAKE_BUILD_TYPE)
+    list(APPEND extra_cmake_args -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE})
+  endif()
+
+  if(DEFINED CMAKE_TOOLCHAIN_FILE)
+    list(APPEND extra_cmake_args "-DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}")
+  endif()
+
+  include(ExternalProject)
+  externalproject_add(tinyxml2
+    GIT_REPOSITORY https://github.com/leethomason/tinyxml2.git
+    GIT_TAG bf15233ad88390461f6ab0dbcf046cce643c5fcb
+    TIMEOUT 600
+    CMAKE_ARGS
+    -DCMAKE_INSTALL_PREFIX=${CMAKE_CURRENT_BINARY_DIR}/tinyxml2_install
+      ${extra_cmake_args}
+      -Wno-dev
+  )
+
+  # The external project will install to the build folder, but we'll install that on make install.
+  install(
+    DIRECTORY
+      ${CMAKE_CURRENT_BINARY_DIR}/tinyxml2_install/
+    DESTINATION
+      ${CMAKE_INSTALL_PREFIX}
+  )
+
+endmacro()
+
 list(INSERT CMAKE_MODULE_PATH 0 "${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules")
-find_package(TinyXML2 REQUIRED)
+find_package(TinyXML2 QUIET)
+if(NOT TinyXML2_FOUND)
+  build_tinyxml2()
+endif()
+
 
 install(DIRECTORY cmake DESTINATION share/${PROJECT_NAME})
 
