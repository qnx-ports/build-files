diff --git a/CMakeLists.txt b/CMakeLists.txt
index 584760f27..b2ed6c1cb 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -142,7 +142,7 @@ ENDIF()
 # ---[ Build flags
 IF(NOT CMAKE_SYSTEM_NAME)
   MESSAGE(FATAL_ERROR "CMAKE_SYSTEM_NAME not defined")
-ELSEIF(NOT CMAKE_SYSTEM_NAME MATCHES "^(Android|Darwin|iOS|Linux|Windows|CYGWIN|MSYS|QURT)$")
+ELSEIF(NOT CMAKE_SYSTEM_NAME MATCHES "^(Android|Darwin|iOS|Linux|Windows|CYGWIN|MSYS|QURT|QNX)$")
   MESSAGE(FATAL_ERROR "Unrecognized CMAKE_SYSTEM_NAME value \"${CMAKE_SYSTEM_NAME}\"")
 ENDIF()
 IF(CMAKE_SYSTEM_NAME MATCHES "Windows")
@@ -559,7 +559,7 @@ TARGET_LINK_LIBRARIES(jit PRIVATE logging)
 IF(XNNPACK_BUILD_LIBRARY)
   ADD_LIBRARY(allocator OBJECT src/allocator.c)
   ADD_LIBRARY(cache OBJECT src/cache.c)
-  ADD_LIBRARY(memory OBJECT src/memory.c)
+  ADD_LIBRARY(xnnpack_memory OBJECT src/memory.c)
   ADD_LIBRARY(microkernel-utils OBJECT src/microkernel-utils.c)
   ADD_LIBRARY(mutex OBJECT src/mutex.c)
   ADD_LIBRARY(operators OBJECT ${OPERATOR_SRCS})
@@ -567,7 +567,7 @@ IF(XNNPACK_BUILD_LIBRARY)
   ADD_LIBRARY(operator-utils OBJECT src/operator-utils.c)
   ADD_LIBRARY(subgraph OBJECT ${SUBGRAPH_SRCS})
   # Need C_EXTENSIONS to get constants for mmap (MAP_ANONYMOUS).
-  SET_TARGET_PROPERTIES(memory PROPERTIES C_EXTENSIONS YES)
+  SET_TARGET_PROPERTIES(xnnpack_memory PROPERTIES C_EXTENSIONS YES)
   ADD_LIBRARY(convolution-test-helpers OBJECT test/convolution-test-helpers.cc)
   TARGET_INCLUDE_DIRECTORIES(convolution-test-helpers PRIVATE include src)
   TARGET_LINK_LIBRARIES(convolution-test-helpers PRIVATE fp16)
@@ -582,14 +582,14 @@ IF(XNNPACK_BUILD_LIBRARY)
     MESSAGE(FATAL_ERROR "Unsupported XNNPACK library type \"${XNNPACK_LIBRARY_TYPE}\". Must be \"static\", \"shared\", or \"default\"")
   ENDIF()
 
-  TARGET_LINK_LIBRARIES(memory PRIVATE logging)
+  TARGET_LINK_LIBRARIES(xnnpack_memory PRIVATE logging)
   TARGET_LINK_LIBRARIES(mutex PRIVATE logging)
   TARGET_LINK_LIBRARIES(operators PRIVATE allocator indirection logging microkernel-utils normalization operator-utils packing post-operation)
   TARGET_LINK_LIBRARIES(operator-run PRIVATE logging)
   TARGET_LINK_LIBRARIES(operator-utils PRIVATE logging)
   TARGET_LINK_LIBRARIES(post-operation PRIVATE logging)
-  TARGET_LINK_LIBRARIES(subgraph PRIVATE allocator logging memory mutex operators operator-run)
-  TARGET_LINK_LIBRARIES(XNNPACK PRIVATE allocator cache hardware-config indirection jit logging memory microkernel-utils microparams-init mutex normalization operators operator-run operator-utils packing post-operation microkernels-prod subgraph)
+  TARGET_LINK_LIBRARIES(subgraph PRIVATE allocator logging xnnpack_memory mutex operators operator-run)
+  TARGET_LINK_LIBRARIES(XNNPACK PRIVATE allocator cache hardware-config indirection jit logging xnnpack_memory microkernel-utils microparams-init mutex normalization operators operator-run operator-utils packing post-operation microkernels-prod subgraph)
   SET_TARGET_PROPERTIES(XNNPACK PROPERTIES C_EXTENSIONS YES)
 ENDIF()
 IF(NOT MSVC)
@@ -806,7 +806,7 @@ IF(XNNPACK_BUILD_LIBRARY)
   TARGET_COMPILE_DEFINITIONS(operator-utils PRIVATE "XNN_LOG_LEVEL=$<$<CONFIG:Debug>:4>$<$<NOT:$<CONFIG:Debug>>:0>")
   TARGET_COMPILE_DEFINITIONS(packing PRIVATE "XNN_LOG_LEVEL=$<$<CONFIG:Debug>:4>$<$<NOT:$<CONFIG:Debug>>:0>")
   TARGET_COMPILE_DEFINITIONS(mutex PRIVATE "XNN_LOG_LEVEL=$<$<CONFIG:Debug>:4>$<$<NOT:$<CONFIG:Debug>>:0>")
-  TARGET_COMPILE_DEFINITIONS(memory PRIVATE "XNN_LOG_LEVEL=$<$<CONFIG:Debug>:4>$<$<NOT:$<CONFIG:Debug>>:0>")
+  TARGET_COMPILE_DEFINITIONS(xnnpack_memory PRIVATE "XNN_LOG_LEVEL=$<$<CONFIG:Debug>:4>$<$<NOT:$<CONFIG:Debug>>:0>")
   TARGET_COMPILE_DEFINITIONS(post-operation PRIVATE "XNN_LOG_LEVEL=$<$<CONFIG:Debug>:4>$<$<NOT:$<CONFIG:Debug>>:0>")
 ENDIF()
 IF(MSVC)
@@ -882,7 +882,9 @@ TARGET_INCLUDE_DIRECTORIES(normalization PRIVATE include src)
 TARGET_INCLUDE_DIRECTORIES(packing PRIVATE include src)
 TARGET_INCLUDE_DIRECTORIES(logging PRIVATE include src)
 IF(XNNPACK_BUILD_LIBRARY)
-  TARGET_INCLUDE_DIRECTORIES(XNNPACK PUBLIC include)
+  TARGET_INCLUDE_DIRECTORIES(XNNPACK PUBLIC
+    "$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>"
+    "$<INSTALL_INTERFACE:include>")
   TARGET_INCLUDE_DIRECTORIES(XNNPACK PRIVATE src)
   TARGET_INCLUDE_DIRECTORIES(allocator PRIVATE include src)
   TARGET_INCLUDE_DIRECTORIES(cache PRIVATE include src)
@@ -891,7 +893,7 @@ IF(XNNPACK_BUILD_LIBRARY)
   TARGET_INCLUDE_DIRECTORIES(operators PRIVATE include src)
   TARGET_INCLUDE_DIRECTORIES(operator-run PRIVATE include src)
   TARGET_INCLUDE_DIRECTORIES(operator-utils PRIVATE include src)
-  TARGET_INCLUDE_DIRECTORIES(memory PRIVATE include src)
+  TARGET_INCLUDE_DIRECTORIES(xnnpack_memory PRIVATE include src)
   TARGET_INCLUDE_DIRECTORIES(mutex PRIVATE include src)
   TARGET_INCLUDE_DIRECTORIES(post-operation PUBLIC include src)
   IF(WIN32)
@@ -975,13 +977,13 @@ TARGET_LINK_LIBRARIES(packing PRIVATE pthreadpool)
 IF(XNNPACK_BUILD_LIBRARY)
   TARGET_LINK_LIBRARIES(XNNPACK PUBLIC pthreadpool)
   TARGET_LINK_LIBRARIES(allocator PRIVATE pthreadpool)
-  TARGET_LINK_LIBRARIES(cache PRIVATE memory pthreadpool)
+  TARGET_LINK_LIBRARIES(cache PRIVATE xnnpack_memory pthreadpool)
   TARGET_LINK_LIBRARIES(subgraph PRIVATE pthreadpool)
   TARGET_LINK_LIBRARIES(operators PRIVATE pthreadpool)
   TARGET_LINK_LIBRARIES(operator-run PRIVATE pthreadpool)
   TARGET_LINK_LIBRARIES(operator-utils PRIVATE pthreadpool)
   TARGET_LINK_LIBRARIES(mutex PRIVATE pthreadpool)
-  TARGET_LINK_LIBRARIES(memory PRIVATE pthreadpool)
+  TARGET_LINK_LIBRARIES(xnnpack_memory PRIVATE pthreadpool)
   TARGET_LINK_LIBRARIES(post-operation PUBLIC pthreadpool allocator)
 ENDIF()
 
@@ -1040,9 +1042,8 @@ IF(XNNPACK_BUILD_LIBRARY)
 
   TARGET_LINK_LIBRARIES(XNNPACK PRIVATE fp16)
   INSTALL(TARGETS XNNPACK
-      LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
-      ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
-      PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+      EXPORT tensorflow-liteTargets
+      DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}")
 ENDIF()
 
 # ---[ XNNPACK unit tests
@@ -3317,17 +3318,17 @@ IF(XNNPACK_BUILD_TESTS)
     ADD_EXECUTABLE(jit-test test/jit.cc)
     TARGET_INCLUDE_DIRECTORIES(jit-test PRIVATE include src)
     TARGET_LINK_LIBRARIES(jit-test PRIVATE pthreadpool GTest::gtest GTest::gtest_main)
-    TARGET_LINK_LIBRARIES(jit-test PRIVATE jit logging memory)
+    TARGET_LINK_LIBRARIES(jit-test PRIVATE jit logging xnnpack_memory)
 
     ADD_EXECUTABLE(aarch32-assembler-test test/aarch32-assembler.cc)
     TARGET_INCLUDE_DIRECTORIES(aarch32-assembler-test PRIVATE include src)
     TARGET_LINK_LIBRARIES(aarch32-assembler-test PRIVATE pthreadpool GTest::gtest GTest::gtest_main)
-    TARGET_LINK_LIBRARIES(aarch32-assembler-test PRIVATE jit logging memory microparams-init)
+    TARGET_LINK_LIBRARIES(aarch32-assembler-test PRIVATE jit logging xnnpack_memory microparams-init)
 
     ADD_EXECUTABLE(aarch64-assembler-test test/aarch64-assembler.cc)
     TARGET_INCLUDE_DIRECTORIES(aarch64-assembler-test PRIVATE include src)
     TARGET_LINK_LIBRARIES(aarch64-assembler-test PRIVATE pthreadpool GTest::gtest GTest::gtest_main)
-    TARGET_LINK_LIBRARIES(aarch64-assembler-test PRIVATE jit logging memory microparams-init)
+    TARGET_LINK_LIBRARIES(aarch64-assembler-test PRIVATE jit logging xnnpack_memory microparams-init)
 
     ADD_EXECUTABLE(code-cache-test test/code-cache.cc)
     TARGET_INCLUDE_DIRECTORIES(code-cache-test PRIVATE include src)
@@ -3382,7 +3383,7 @@ IF(XNNPACK_BUILD_BENCHMARKS)
   TARGET_LINK_LIBRARIES(bench-utils PRIVATE benchmark::benchmark cpuinfo pthreadpool)
   TARGET_LINK_LIBRARIES(bench-utils PRIVATE hardware-config)
   IF(XNNPACK_BUILD_LIBRARY)
-    TARGET_LINK_LIBRARIES(bench-utils PRIVATE logging memory)
+    TARGET_LINK_LIBRARIES(bench-utils PRIVATE logging xnnpack_memory)
   ENDIF()
 
   # ---[ Build accuracy microbenchmarks
@@ -4265,5 +4266,5 @@ IF(XNNPACK_BUILD_BENCHMARKS)
   ADD_EXECUTABLE(jit-bench bench/jit.cc)
   TARGET_INCLUDE_DIRECTORIES(jit-bench PRIVATE . include src)
   TARGET_LINK_LIBRARIES(jit-bench PRIVATE benchmark::benchmark pthreadpool)
-  TARGET_LINK_LIBRARIES(jit-bench PRIVATE jit logging memory microkernels-all)
+  TARGET_LINK_LIBRARIES(jit-bench PRIVATE jit logging xnnpack_memory microkernels-all)
 ENDIF()
diff --git a/cmake/DownloadPThreadPool.cmake b/cmake/DownloadPThreadPool.cmake
index 6cb67dc00..aef0589be 100644
--- a/cmake/DownloadPThreadPool.cmake
+++ b/cmake/DownloadPThreadPool.cmake
@@ -26,5 +26,6 @@ ExternalProject_Add(pthreadpool
   BUILD_COMMAND ""
   INSTALL_COMMAND ""
   TEST_COMMAND ""
+  PATCH_COMMAND ${PTHREADPOOL_PATCH_CMD}
 )
 # LINT.ThenChange(../WORKSPACE.bazel)
