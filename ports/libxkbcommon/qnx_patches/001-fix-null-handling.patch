diff --git a/test/keysym.c b/test/keysym.c
index 50f6a922..487057b8 100644
--- a/test/keysym.c
+++ b/test/keysym.c
@@ -178,9 +178,9 @@ test_deprecated(xkb_keysym_t keysym, const char *name,
     bool deprecated = xkb_keysym_is_deprecated(keysym, name, &reference);
 
     fprintf(stderr, "Expected keysym %#x -> deprecated: %d, reference: %s\n",
-            keysym, expected_deprecated, expected_reference);
+            keysym, expected_deprecated, strnull(expected_reference));
     fprintf(stderr, "Received keysym %#x -> deprecated: %d, reference: %s\n",
-            keysym, deprecated, reference);
+            keysym, deprecated, strnull(reference));
 
     return deprecated == expected_deprecated &&
            (
diff --git a/test/rules-file-includes.c b/test/rules-file-includes.c
index 400bba9c..75384ac5 100644
--- a/test/rules-file-includes.c
+++ b/test/rules-file-includes.c
@@ -58,8 +58,11 @@ test_rules(struct xkb_context *ctx, struct test_data *data)
     };
     struct xkb_component_names kccgst;
 
-    fprintf(stderr, "\n\nChecking : %s\t%s\t%s\t%s\t%s\n", data->rules,
-            data->model, data->layout, data->variant, data->options);
+    fprintf(stderr, "\n\nChecking : %s\t%s\t%s\t%s\t%s\n",
+        strnull(data->rules), strnull(data->model),
+        strnull(data->layout), strnull(data->variant),
+        strnull(data->options));
+
 
     if (data->should_fail)
         fprintf(stderr, "Expecting: FAILURE\n");
diff --git a/test/rules-file.c b/test/rules-file.c
index 8988a447..e249d535 100644
--- a/test/rules-file.c
+++ b/test/rules-file.c
@@ -57,8 +57,11 @@ test_rules(struct xkb_context *ctx, struct test_data *data)
     };
     struct xkb_component_names kccgst;
 
-    fprintf(stderr, "\n\nChecking : %s\t%s\t%s\t%s\t%s\n", data->rules,
-            data->model, data->layout, data->variant, data->options);
+    fprintf(stderr, "\n\nChecking : %s\t%s\t%s\t%s\t%s\n",
+        strnull(data->rules), strnull(data->model),
+        strnull(data->layout), strnull(data->variant),
+        strnull(data->options));
+
 
     if (data->should_fail)
         fprintf(stderr, "Expecting: FAILURE\n");
