diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5625841..0abf3d4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -51,13 +51,13 @@ IF(NOT CMAKE_SYSTEM_PROCESSOR)
   IF(NOT IOS)
     MESSAGE(WARNING "CMAKE_SYSTEM_PROCESSOR is not defined, automatic configuration may choose suboptimal options")
   ENDIF()
-ELSEIF(NOT CMAKE_SYSTEM_PROCESSOR MATCHES "^(i686|x86_64|armv5te|armv7-a|armv7l|aarch64)$")
+ELSEIF(NOT CMAKE_SYSTEM_PROCESSOR MATCHES "^(i686|x86_64|armv5te|armv7-a|armv7l|aarch64|armv7)$")
   MESSAGE(FATAL_ERROR "Unrecognized CMAKE_SYSTEM_PROCESSOR = ${CMAKE_SYSTEM_PROCESSOR}")
 ENDIF()
 
 IF(NOT CMAKE_SYSTEM_NAME)
   MESSAGE(FATAL_ERROR "CMAKE_SYSTEM_NAME not defined")
-ELSEIF(NOT CMAKE_SYSTEM_NAME MATCHES "^(Darwin|Linux|Android)$")
+ELSEIF(NOT CMAKE_SYSTEM_NAME MATCHES "^(Darwin|Linux|Android|QNX)$")
   MESSAGE(FATAL_ERROR "Unrecognized CMAKE_SYSTEM_NAME = ${CMAKE_SYSTEM_NAME}")
 ENDIF()
 
diff --git a/include/nnpack/system.h b/include/nnpack/system.h
index 35aaaaf..6dc7354 100644
--- a/include/nnpack/system.h
+++ b/include/nnpack/system.h
@@ -5,7 +5,7 @@
 #include <stdlib.h>
 #include <assert.h>
 
-#if defined(__linux__) || defined(__native_client__)
+#if defined(__linux__) || defined(__native_client__) || defined(__QNXNTO__)
 	#include <time.h>
 	#include <unistd.h>
 	#include <sys/mman.h>
@@ -17,7 +17,7 @@
 #endif
 
 inline static double read_timer() {
-#if defined(__linux__) || defined(__native_client__)
+#if defined(__linux__) || defined(__native_client__) || defined(__QNXNTO__)
 	struct timespec ts;
 	int result = clock_gettime(CLOCK_MONOTONIC, &ts);
 	assert(result == 0);
@@ -124,3 +124,4 @@ inline static void release_memory(void* memory_block, size_t memory_size) {
 	free(memory_block);
 #endif
 }
+
diff --git a/include/nnpack/utils.h b/include/nnpack/utils.h
index c79a07e..57b51aa 100644
--- a/include/nnpack/utils.h
+++ b/include/nnpack/utils.h
@@ -6,6 +6,11 @@
 	#include <stddef.h>
 #endif
 
+#ifdef __QNXNTO__
+	#undef max
+	#undef min
+#endif
+
 static inline float maxf(float a, float b) {
 	return a > b ? a : b;
 }
@@ -41,3 +46,4 @@ static inline size_t divide_round_up(size_t dividend, size_t divisor) {
 		return dividend / divisor + 1;
 	}
 }
+
