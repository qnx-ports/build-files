test_thcell
testing th_next_cell() without decomposing SARA AM...
testing th_next_cell() decomposing SARA AM...
testing th_prev_cell() without decomposing SARA AM...
testing th_prev_cell() decomposing SARA AM...
testing th_make_cells() without decomposing SARA AM...
testing th_make_cells() decomposing SARA AM...
0
----------------------------

test_thctype

















0
----------------------------

test_thinp
0
----------------------------

test_thrend
Testing th_render_text_tis() w/o decomposing SARA AM
Testing th_render_text_tis() decomposing SARA AM
Testing th_render_text_win() w/o decomposing SARA AM
Testing th_render_text_win() decomposing SARA AM
Testing th_render_text_mac() w/o decomposing SARA AM
Testing th_render_text_mac() decomposing SARA AM
0
----------------------------

test_thstr
0
----------------------------

test_thwbrk
Testing with input string: ÿÿÿ??ÿ? ÿÿ.ÿÿÿ. ÿÿÿÿ?ÿ?ÿÿ?ÿÿÿÿ?
Converting to Unicode...
Calling th_brk_wc_find_breaks()...
Total 7 cut points.Cut points list: 6, 11, 19, 22, 26, 29, 34
Calling th_brk_wc_insert_breaks() ....
Return value from th_brk_wc_insert_breaks is 75
Output string length is 75
Compare with result from th_brk_insert_breaks()..
Correct! .. test th_brk_wc_insert_breaks() passed...
0
----------------------------

test_thwchar
Testing thwchar...
Input:  tis-620-0 string of length 32: ÿÿÿ??ÿ? ÿÿÿÿ?ÿ?ÿÿ?ÿÿÿÿ?
Output: Unicode string of length 32, wcslen = 32

Convert back to tis-620-0 string...
Output: tis-620-0 string of length 32, strlen = 32: ÿÿÿ??ÿ? ÿÿÿÿ?ÿ?ÿÿ?ÿÿÿÿ?
 Input = output, correct! Test thwchar OK.
0
----------------------------

thsort
Usage: thsort <input file> <output file>
0
----------------------------